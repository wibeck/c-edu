#include <omp.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>


int phase1(int input1, int input2){
	return input1 + input2;
}
int phase2(int input1, int input2) {
	return input1 + input2 * 2;
}
int phase3(int input1, int input2) {
	return input1 * 2 + input2 * 2;
}


int main() {

	int tid = 0;
	printf("Demonstrating parallel sections: \n"));
	#pragma omp parallel sections private(tid)
	{
		tid = omp_get_thread_num();

		#pragma omp section

			printf("Thread %d: calculated %d \n", tid, phase1(4,5));
		#pragma omp section

			printf("Thread %d: calculated %d \n", tid, phase2(4,5));
		#pragma omp section

			printf("Thread %d: calculated %d \n", tid, phase3(4,5));
	}
	printf("Demonstrating single directive: \n")
	#pragma omp parallel sections private(tid)
	{
		tid = omp_get_thread_num();

			printf("Hi, this is thread %d before single section! \n", tid);
		#pragma omp single
			{
			printf("Hi, this is thread %d executing the single section! \n", tid);
			}

		printf("Hi, this is thread %d after single section! \n", tid);
	}



}


